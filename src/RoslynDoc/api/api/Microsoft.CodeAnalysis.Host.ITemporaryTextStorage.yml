items:
- uid: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage
  href: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.yml
  name: ITemporaryTextStorage
  fullName: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage
  type: Interface
  source:
    remote: &o0
      path: src/Workspaces/Core/Portable/Workspace/Host/TemporaryStorage/ITemporaryStorage.cs
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      key: 74f60326
    path: src/Workspaces/Core/Portable/Workspace/Host/TemporaryStorage/ITemporaryStorage.cs
    startLine: 13
  summary: TemporaryStorage can be used to read and write text to a temporary storage location.
  syntax:
    content:
      CSharp: 'public interface ITemporaryTextStorage : IDisposable'
  id: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage
  children:
  - Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.ReadText(System.Threading.CancellationToken)
  - Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.ReadTextAsync(System.Threading.CancellationToken)
  - Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.WriteText(Microsoft.CodeAnalysis.Text.SourceText,System.Threading.CancellationToken)
  - Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.WriteTextAsync(Microsoft.CodeAnalysis.Text.SourceText,System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.ReadText(System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.yml
  name: ReadText(CancellationToken)
  fullName: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.ReadText(System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Host/TemporaryStorage/ITemporaryStorage.cs
    startLine: 15
  syntax:
    content:
      CSharp: SourceText ReadText(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: SourceText
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: Microsoft.CodeAnalysis.Text.SourceText
  id: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.ReadText(System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.ReadTextAsync(System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.yml
  name: ReadTextAsync(CancellationToken)
  fullName: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.ReadTextAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Host/TemporaryStorage/ITemporaryStorage.cs
    startLine: 16
  syntax:
    content:
      CSharp: Task<SourceText> ReadTextAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{Microsoft.CodeAnalysis.Text.SourceText}
        name: Task<SourceText>
        isExternal: true
  id: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.ReadTextAsync(System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.WriteText(Microsoft.CodeAnalysis.Text.SourceText,System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.yml
  name: WriteText(SourceText, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.WriteText(Microsoft.CodeAnalysis.Text.SourceText, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Host/TemporaryStorage/ITemporaryStorage.cs
    startLine: 17
  syntax:
    content:
      CSharp: void WriteText(SourceText text, CancellationToken cancellationToken = null)
    parameters:
    - id: text
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: Microsoft.CodeAnalysis.Text.SourceText
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
  id: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.WriteText(Microsoft.CodeAnalysis.Text.SourceText,System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.WriteTextAsync(Microsoft.CodeAnalysis.Text.SourceText,System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.yml
  name: WriteTextAsync(SourceText, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.WriteTextAsync(Microsoft.CodeAnalysis.Text.SourceText, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Host/TemporaryStorage/ITemporaryStorage.cs
    startLine: 18
  syntax:
    content:
      CSharp: Task WriteTextAsync(SourceText text, CancellationToken cancellationToken = null)
    parameters:
    - id: text
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: Microsoft.CodeAnalysis.Text.SourceText
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task
        name: Task
        isExternal: true
  id: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.WriteTextAsync(Microsoft.CodeAnalysis.Text.SourceText,System.Threading.CancellationToken)
